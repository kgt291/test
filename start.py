def startkrr(a,k):  
  for i in range(0, int(a)):
    i = i + 1  
    txt = 'dualfoil'+str(i)+'.txt'  
    f= open(txt, 'w')

    f.write("50        ! lim,   limit on number of iterations\n")
    f.write("100.0d-06 ! h1,  thickness of negative electrode (m)\n")
    f.write("25.d-06   ! h2,  thickness of separator (m)\n")
    f.write("100.0d-06 ! h3,  thickness of positive electrode (m)\n")
    f.write("25.d-06   ! hcn, thickness of negative current collector (m)\n")
    f.write("25.d-06   ! hcp, thickness of positive current collector (m)\n")
    f.write("80        ! n1,    number of nodes in negative electrode(set=0 if in foil mode)\n")
    f.write("40        ! n2,    number of nodes in separator\n")
    f.write("80        ! n3,    number of nodes in positive electrode\n")
    f.write("100       ! n4, number of nodes in solid particle\n")
    f.write("0	    ! mvdc1, flag for variable solid diff coeff in anode\n")
    f.write("0         ! mvdc3, flag for variable solid diff coeff in cathode\n")
    f.write("20	    ! lims, number of iterations for solid phase convergence\n")
    f.write("298.d0    ! T      temperature (K)\n")
    f.write("1000.0    ! xi(1,1), initial salt concentration (mol/m3), 1200 needed for constant load short circuit\n")
    f.write("0.6      ! x,     initial stoichiometric parameter for neg. (ignored if n1=0) 0.67\n")
    f.write("0.5       ! y,     initial stoichiometric parameter for positive based on formula unit where 0<y<1\n")
    f.write("30.0d0    ! tmmax, maximum time step size (s)\n")
    f.write("3.9d-14   ! dfs1,  (ignored in Foil mode) diffusion coef. in negative solid (m2/s) 0.58d-14,\n")
    f.write("1.0d-13   ! dfs3,  diffusion coef. in positive solid (m2/s) 0.8d-14, 3.d-14\n")
    f.write("10.0d-6   ! Rad1,  radius of negative particles (m) (ignored in Foil mode) 0.0000042, 0.0000078\n")
    f.write("10.0d-6   ! Rad3,  radius of positive particles (m) 0.000002, 17\n")
    f.write("0.3       ! ep1,   volume fraction of electrolyte in negative electrode\n")
    f.write("0.0d0     ! epp1,  volume fraction of polymer in negative electrode\n")
    f.write("0.1       ! epf1,  volume fraction of inert filler in negative electrode\n")
    f.write("0.0d0     ! epg1,  volume fraction of gas in negative\n")
    f.write("1.0       ! ep2,   ep2+epp2=1.0  volume fraction of electrolyte in separator\n")
    f.write("0.0d0     ! epp2,  volume fraction of polymer in separator\n")
    f.write("0.0d0     ! epg2,  volume fraction gas in separator\n")
    f.write("0.3       ! ep3,   volume fraction of electrolyte in positive electrode\n")
    f.write("0.0d0     ! epp3,  volume fraction of polymer in positive electrode\n")
    f.write("0.2       ! epf3,  volume fraction of inert filler in positive electrode\n")
    f.write("0.0d0     ! epg3,  volume fraction of gas in positive\n")
    f.write("100.0d0   ! sig1,  conductivity of negative matrix (S/m) (ignored in Foil mode) 124.28\n")
    f.write("10.0d0    ! sig3,  conductivity of positive matrix (S/m) 23.43\n")
    f.write("1.0d-5    ! rka1,  rate constant for negative reaction 2d-9\n")
    f.write("3.d-11    ! rka3,  rate constant for positive reaction, changed from 3 to 4 4d-9\n")
    f.write("0.001d0   ! ranode, anode film resistance (ohm-m2) 0.88d-2\n")
    f.write("0.000d0   ! rcathde,  cathode film resistance (ohm-m2) 2.0d-2 1.0d-2, 1.2d-2\n")
    f.write("372.d0    ! cot1,  coulombic capacity of negative material (mAh/g) \n")
    f.write("274.d0    ! cot3,  coulombic capacity of positive material (mAh/g)\n")
    f.write("1324.0    ! re,    density of electrolyte (kg/m3)\n")
    f.write("1800.0    ! rs1,   density of negative insertion material (kg/m3)\n")
    f.write("5010.0    ! rs3,   density of positive insertion material (kg/m3)\n")
    f.write("1800.0    ! rf,    density of inert filler (kg/m3)\n")
    f.write("1780.0    ! rpl,   (not used here) density of polymer material (kg/m3)\n")
    f.write("0.0d0     ! rc,    density of inert separator material (kg/m3)\n")
    f.write("8954.0    ! rcn,   density of negative current collector (kg/m3) [copper foil]\n")
    f.write("2707.0    ! rcp,   density of positive current collector (kg/m3) [aluminum foil]\n")
    f.write("0.0d0     ! htc,   heat-transfer coefficient at ends of cell stack (W/m2K) 0.36\n")
    f.write("2000.0d0  ! Cp,    heat capacity of system (J/kg-K) 1200\n")
    f.write("298.d0    ! Tam,   ambient air temperature (K)\n")
    f.write("1         ! ncell, number of cells in a cell stack\n")
    f.write("2         ! lht,   0 uses htc,  1 calcs htc,  2 isothermal\n")
    f.write("1         ! il1,   1 for long print-out  0 for short print-out\n")
    f.write("10        ! il2,   prints every il2 th node in long print-out\n")
    f.write("10        ! il3,   prints every il3 th time step in long print-out\n")
    f.write("1         ! lflag, 0 for electrolyte in separator only, 1 for uniform\n")
    f.write("0         ! imp,   0 for no impedance, 1 for impedance\n")
    f.write("0.0d0     ! capp1, capacitance of negative material (F/m2)\n")
    f.write("0.0d0     ! capp3, capacitance of positive material (F/m2)\n")
    f.write("0         ! lpow   0 for no power peaks, 1 for power peaks\n")
    f.write("0         ! jsol   calculate solid profiles if 1 < jsol < nj\n")
    f.write("0         ! nside  flag to turn on (1) or off (0) side reactions\n")
    f.write("0.0d0     ! rksa1   rate constant side reaction 1 negative (ignored if nside=0)\n")
    f.write("0.0d0     ! rksc1   rate constant side reaction 1 positive (ignored if nside=0)\n")
    f.write("0.0d0     ! rksa2   rate constant side reaction 2 negative (ignored if nside=0)\n")
    f.write("0.0d0     ! rksc2   rate constant side reaction 2 positive (ignored if nside=0)\n")
    f.write("0.0d0     ! rksa3   rate constant side reaction 3 negative (ignored if nside=0)\n")
    f.write("0.0d0     ! rksc3   rate constant side reaction 3 positive (ignored if nside=0\n")
    f.write("3         ! nneg   see below\n")
    f.write("11        ! nprop  see below\n")
    f.write("6        ! npos   see below\n")
    f.write(str(1)+"         ! lcurs, number of current changes\n")
    if int(a) == 4:
       if i<=int(k): cu=80.0/int(k)
       else: cu=0.0
       tt="5.0"
    else:
       if i<=int(k): cu=120.0/int(k)
       else: cu=0.0
       tt="5.0"
    mc="1"
    vcutlo="2.0"
    vcuthi="4.4"
    f.write(str(cu)+"d0  "+tt+"d0  "+mc+"  "+vcutlo+"d0  "+vcuthi+"d0\n")

    f.write("\n\n\n")
    f.write("	EXPLANATIONS\n")
    f.write("lines 20-22: ep1, epp1, and epf1\n")
    f.write("	Set equal to 0.0 when running in Foil mode (metn = 1)\n\n")
    f.write("line 50: il1")
    f.write("          1 gives long print-out no matter if a run converges or not\n")
    f.write("		  The long print-out stops at t(noncovergence).\n")
    f.write("          0 gives short print-out if a run converges but a long\n")
    f.write("            print-out if the run does not converge.\n\n")
    f.write("line 59: lcurs,  number of current changes\n\n")
    f.write("line 60 onward:  cu(i), tt(i), mc(i), vcutlo(i), vcuthi(i)\n")
    f.write("     cu(i) The ith value of the current (A/m2), potential (V), power (W/m2)\n")
    f.write("           or load (Ohm-m2) of the segment\n")
    f.write("     tt(i) The ith value of the time (min) or cutoff potential (V)\n")
    f.write("           of the segment\n")
    f.write("     mc(i) The mode of the segment; 0 for potentiostatic, 1 for galvanostatic\n")
    f.write("	   for a given time, 2 for galvanostatic to a cutoff potential,\n")
    f.write("	   -1 for galvanostatic for a given time with a tapered current upon\n")
    f.write("	   reaching a cutoff potential, -2 for specified power (in W/m2), and\n")
    f.write("         -3 for specified load (in ohm-m2)\n")
    f.write("	 vcutlo(i) low voltage cutoff for current step\n")
    f.write("	 vcuthi(i) high voltage cutoff for current step\n\n")
    f.write("nneg:\n")
    f.write("    1 ! Li foil\n")
    f.write("    2 ! Carbon (petroleum coke)\n")
    f.write("    3 ! MCMB 2528 graphite (Bellcore) (0.01 < x < 0.90)\n")
    f.write("    4 ! TiS2\n")
    f.write("    5 ! Tungsten oxide (LixWO3 with 0<x<0.67)\n")
    f.write("    6 ! Lonza KS6 graphite (Bellcore)\n")
    f.write("    7 ! Albertus MH\n")
    f.write("    8 ! Add your own negative electrode\n\n")
    f.write("nprop:    1 ! AsF6 in methyl acetate\n")
    f.write("    2 ! Perchlorate in PEO\n")
    f.write("    3 ! Sodium Triflate in PEO\n")
    f.write("    4 ! LiPF6 in PC (Sony cell simulation)\n")
    f.write("    5 ! Perchlorate in PC (West simulation)\n")
    f.write("    6 ! Triflate in PEO\n")
    f.write("    7 ! LiPF6 in EC/DMC and p(VdF-HFP) (Bellcore)\n")
    f.write("    8 ! LiPF6 in EC/DMC and p(VdF-HFP) (Bellcore) cell #2\n")
    f.write("    9 ! Ideal ion exchange membrane\n")
    f.write("   10 ! TFSI in PEMO at 40 C (oxymethylene-linked PEO) (LBL)\n")
    f.write("   11 ! LiPF6 in EC:DMC (liquid)\n")
    f.write("   12 ! LiTFSI in PEO at 85 C (LBL)\n")
    f.write("   13 ! Paxton 30% KOH in H2O\n")
    f.write("   14 ! Add your own electrolyte\n\n")
    f.write("npos:\n")
    f.write("    1 ! TiS2\n")
    f.write("    2 ! Spinel Mn2O4 (lower plateau)\n")
    f.write("    3 ! NaCoO2:  Sodium cobalt oxide (P2 phase, 0.3<y<0.92)\n")
    f.write("    4 ! Spinel Mn2O4 (upper plateau) (0.2 < y < 1.0)\n")
    f.write("    5 ! Tungsten oxide (LixWO3 with 0<x<0.67)\n")
    f.write("    6 ! CoO2 (Cobalt dioxide) (0.5 < y < 0.99)\n")
    f.write("    7 ! V2O5 (Vanadium oxide) (0 < y < 0.95)\n")
    f.write("    8 ! Ni0.8Co0.2O2 (Gen 1) (0.4 < y < 0.99)\n")
    f.write("    9 ! Spinel Mn2O4 (Bellcore)\n")
    f.write("    10 ! V6O13 (vanadium oxide) (LiyV02.167, 0.05 < y < 1.0)\n")
    f.write("    11 ! LiAl0.2Mn1.8O4F0.2 (Bellcore doped spinel) (0.21 < y < 1.0)\n")
    f.write("    12 ! Albertus NiOOHHy\n")
    f.write("    13 ! Add your own positive electrode\n\n")
    f.write("Density and coulombic capacity for commonly-used materials\n\n")
    f.write("Material      Density (kg/m3)   Coulombic capacity (mAh/g)\n")
    f.write("--------      --------------    -------------------------\n")
    f.write("Li metal       534                 3862.5\n")
    f.write("C6            2260                  372\n")
    f.write("LiMn2O4       4280                  148\n")
    f.write("LiCoO2        5010                  274\n")
    f.write("LiV6O13       3900                  417.4 (based on 0 < y < 8)\n")
    f.write("LiTiS2        2285                  225\n")
    f.write("Cu            8954                  ---\n")
    f.write("Al            2707                  ---\n")
    f.write("Carbon black  1950                  ---\n")
    f.write("PVDF binder   1770                  ---")
    f.close()

